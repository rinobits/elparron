openapi: 3.0.0
info:
  title: API EL PARRON
  description: API de panadería El Parron.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/rinobitapis/elparron/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: usuarios
  description: Operaciones con usuarios
- name: tortas
  description: Operaciones con tortas
- name: masaTipo
  description: Operaciones con tipos de masa
- name: masaSabor
  description: Operaciones con sabores de masa
- name: sabor
  description: Operaciones con sabores de torta (cobertura)
- name: tamano
  description: Operaciones con tamanos
- name: sucursales
  description: Operaciones con sucursales
- name: comunas
  description: Operaciones con comunas
- name: precios
  description: Operaciones con precios
- name: productos
  description: Operaciones con productos
- name: diaria
  description: Operaciones con programación diaria
- name: semanal
  description: Operaciones con programación semanal
- name: sobrante
  description: Operaciones con sobrantes
paths:
  /usuario/validate:
    post:
      tags:
      - usuarios
      summary: Autenticación
      description: Obtención de privilegios
      operationId: authenticate
      requestBody:
        description: Usuario input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuarios'
      responses:
        "200":
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponse'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuthLogin'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /usuario/getbyid/{id}:
    get:
      tags:
      - usuarios
      summary: Buscar usuario por su id.
      description: Se requieren privilegos.
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: Users ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /usuario/update/{id}:
    put:
      tags:
      - usuarios
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editUser
      parameters:
      - name: id
        in: path
        description: Users ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Usuario editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /usuario/delete/{id}:
    put:
      tags:
      - usuarios
      summary: Eliminar usuario
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: Order ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Usuario eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /usuario/getall:
    get:
      tags:
      - usuarios
      summary: Listar usuarios
      description: Se requieren privilegos.
      operationId: getUsers
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUsers'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /usuario/create:
    post:
      tags:
      - usuarios
      summary: Crear usuario
      description: Se requieren privilegios.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuarios'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Usuarios
  /tortas/getbyid/{id}:
    get:
      tags:
      - tortas
      summary: Buscar tortas por su id.
      description: Se requieren privilegos.
      operationId: getTortasById
      parameters:
      - name: id
        in: path
        description: torta ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Torta obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTorta'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tortas
  /tortas/update/{id}:
    put:
      tags:
      - tortas
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editTorta
      parameters:
      - name: id
        in: path
        description: Torta ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Torta editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tortaBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tortas
  /tortas/delete/{id}:
    put:
      tags:
      - tortas
      summary: Eliminar torta
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteTorta
      parameters:
      - name: id
        in: path
        description: Torta ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Torta eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tortas
  /tortas/getall:
    get:
      tags:
      - tortas
      summary: Listar tortas
      description: Se requieren privilegos.
      operationId: getTortas
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTortas'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tortas
  /tortas/create:
    post:
      tags:
      - tortas
      summary: Crear torta
      description: Se requieren privilegios.
      operationId: createTorta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tortas'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tortaBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tortas
  /masatipo/getbyid/{id}:
    get:
      tags:
      - masaTipo
      summary: Buscar tipo de masa por su id.
      description: Se requieren privilegos.
      operationId: getMasaTipoById
      parameters:
      - name: id
        in: path
        description: masaTipo ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMasaTipo'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaTipo
  /masatipo/update/{id}:
    put:
      tags:
      - masaTipo
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editMasaTipo
      parameters:
      - name: id
        in: path
        description: MasaTipo ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tipo de masa editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/masaTipoBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaTipo
  /masatipo/delete/{id}:
    put:
      tags:
      - masaTipo
      summary: Eliminar tipo de masa
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteMasaTipo
      parameters:
      - name: id
        in: path
        description: MasaTipo ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Tipo de masa eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaTipo
  /masatipo/getall:
    get:
      tags:
      - masaTipo
      summary: Listar tipo de masa
      description: Se requieren privilegos.
      operationId: getMasaTipo
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMasaTipos'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaTipo
  /masatipo/create:
    post:
      tags:
      - masaTipo
      summary: Crear tipo de masa
      description: Se requieren privilegios.
      operationId: createMasaTipo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/masaTipo'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/masaTipoBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaTipo
  /masasabor/getbyid/{id}:
    get:
      tags:
      - masaSabor
      summary: Buscar sabor de masa por su id.
      description: Se requieren privilegos.
      operationId: getMasaSaborById
      parameters:
      - name: id
        in: path
        description: masaSabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMasaSabor'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaSabor
  /masasabor/edit/{id}:
    put:
      tags:
      - masaSabor
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editMasaSabor
      parameters:
      - name: id
        in: path
        description: MasaSabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tipo de masa editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/masaSaborBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaSabor
  /masasabor/delete/{id}:
    put:
      tags:
      - masaSabor
      summary: Eliminar sabor de masa
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteMasaSabor
      parameters:
      - name: id
        in: path
        description: MasaSabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Tipo de masa eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaSabor
  /masasabor/getall:
    get:
      tags:
      - masaSabor
      summary: Listar sabor de masa
      description: Se requieren privilegos.
      operationId: getMasaSabor
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMasaSabors'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaSabor
  /masasabor/create:
    post:
      tags:
      - masaSabor
      summary: Crear sabor de masa
      description: Se requieren privilegios.
      operationId: createMasaSabor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/masaSabor'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/masaSaborBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: MasaSabor
  /sabor/getbyid/{id}:
    get:
      tags:
      - sabor
      summary: Buscar tipo de masa por su id.
      description: Se requieren privilegos.
      operationId: getSaborById
      parameters:
      - name: id
        in: path
        description: sabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSabor'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sabor
  /sabor/update/{id}:
    put:
      tags:
      - sabor
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editSabor
      parameters:
      - name: id
        in: path
        description: Sabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Sabor editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/saborBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sabor
  /sabor/delete/{id}:
    put:
      tags:
      - sabor
      summary: Eliminar sabor
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteSabor
      parameters:
      - name: id
        in: path
        description: Sabor ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tipo de masa eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sabor
  /sabor/getall:
    get:
      tags:
      - sabor
      summary: Listar sabores
      description: Se requieren privilegos.
      operationId: getSabor
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSabores'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sabor
  /sabor/create:
    post:
      tags:
      - sabor
      summary: Crear sabores
      description: Se requieren privilegios.
      operationId: createSabor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sabor'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/saborBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sabor
  /tamano/getbyid/{id}:
    get:
      tags:
      - tamano
      summary: Buscar tamaño por su id.
      description: Se requieren privilegos
      operationId: getTamanoById
      parameters:
      - name: id
        in: path
        description: tamano ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTamano'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tamano
  /tamano/update/{id}:
    put:
      tags:
      - tamano
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editTamano
      parameters:
      - name: id
        in: path
        description: Tamano ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Tamaño editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tamanoBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tamano
  /tamano/delete/{id}:
    put:
      tags:
      - tamano
      summary: Eliminar tamano
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteTamano
      parameters:
      - name: id
        in: path
        description: Tamano ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Tamaño eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tamano
  /tamano/getall:
    get:
      tags:
      - tamano
      summary: Listar tamaño
      description: Se requieren privilegos.
      operationId: getTamano
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTamanos'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tamano
  /tamano/create:
    post:
      tags:
      - tamano
      summary: Crear tamaño
      description: Se requieren privilegios.
      operationId: createTamano
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tamano'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tamanoBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Tamano
  /sucursal/getbyid/{id}:
    get:
      tags:
      - sucursales
      summary: Buscar sucursal por su id.
      description: Se requieren privilegos
      operationId: getSucursalById
      parameters:
      - name: id
        in: path
        description: sucursal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSucursal'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sucursales
  /sucursal/update/{id}:
    put:
      tags:
      - sucursales
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editSucursales
      parameters:
      - name: id
        in: path
        description: Sucursal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Sucursal editada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sucursalBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sucursales
  /sucursal/delete/{id}:
    put:
      tags:
      - sucursales
      summary: Eliminar sucursales
      description: Se requieren privilegios. 0 para eliminar 1 y para recuperar
      operationId: deleteSucursales
      parameters:
      - name: id
        in: path
        description: Sucursal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Sucursalor eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sucursales
  /sucursal/getall:
    get:
      tags:
      - sucursales
      summary: Listar sucursales
      description: Se requieren privilegos.
      operationId: getSucursales
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSucursales'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sucursales
  /sucursal/create:
    post:
      tags:
      - sucursales
      summary: Crear sucursal
      description: Se requieren privilegios.
      operationId: createSucursales
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sucursales'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sucursalBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sucursales
  /comuna/getbyid/{id}:
    get:
      tags:
      - comunas
      summary: Buscar comuna por su id.
      description: Se requieren privilegos
      operationId: getComunaById
      parameters:
      - name: id
        in: path
        description: comuna ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getComuna'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Comunas
  /comuna/update/{id}:
    put:
      tags:
      - comunas
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editComunas
      parameters:
      - name: id
        in: path
        description: Comuna ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Comuna editada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comunaBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Comunas
  /comuna/delete/{id}:
    put:
      tags:
      - comunas
      summary: Eliminar comunas
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteComunas
      parameters:
      - name: id
        in: path
        description: Comuna ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Comunaor eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Comunas
  /comuna/getall:
    get:
      tags:
      - comunas
      summary: Listar comuna
      description: Se requieren privilegos.
      operationId: getComunas
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getComunas'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Comunas
  /comuna/create:
    post:
      tags:
      - comunas
      summary: Crear comuna
      description: Se requieren privilegios.
      operationId: createComunas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comunas'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comunaBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Comunas
  /programacion/diaria/diaysucursal:
    get:
      tags:
      - diaria
      summary: Buscar dia por fecha e id de la sucursal. Devuelve Json con 13 tortas
        y sus cantidades.
      description: Se requieren privilegos
      operationId: getDiariaById
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJsonData'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/diaria/update:
    put:
      tags:
      - diaria
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editDiarias
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Dia editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/diaria/getall:
    get:
      tags:
      - diaria
      summary: Listar todo
      description: Se requieren privilegos.
      operationId: getDiarias
      responses:
        "200":
          description: Lista generada exitosamente.  Devuelve toda la información
            de la base de datos en formato JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDiasListAll'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/diaria/create:
    post:
      tags:
      - diaria
      summary: Crear programación diaria
      description: Se requieren privilegios.
      operationId: createDiarias
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/diaria/emptyday:
    put:
      tags:
      - diaria
      summary: Vaciar día
      description: Se requieren privilegios.
      operationId: deleteDiarias
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Día vaciado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/diaria/emptyweek:
    put:
      tags:
      - diaria
      summary: Vaciar semana correspondiente a una sucursal
      description: Se requieren privilegios.
      operationId: deleteWeek
      parameters:
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Semana vaciada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Diaria
  /programacion/sobrante/diaysucursal:
    get:
      tags:
      - sobrante
      summary: Buscar dia por fecha e id de la sucursal.
      description: Se requieren privilegos
      operationId: getSobranteById
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJsonData'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sobrante
  /programacion/sobrante/update:
    put:
      tags:
      - sobrante
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editSobrantes
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Dia editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sobrante
  /programacion/sobrante/create:
    post:
      tags:
      - sobrante
      summary: Crear sobrante
      description: Se requieren privilegios.
      operationId: createSobrantes
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Sobrante
  /programacion/semanal/diaysucursal:
    get:
      tags:
      - semanal
      summary: Buscar dia por fecha e id de la sucursal.
      description: Se requieren privilegos
      operationId: getSemanalById
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJsonData'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Semanal
  /programacion/semanal/update:
    put:
      tags:
      - semanal
      summary: Editar información
      description: Se requieren privilegios.
      operationId: editSemanal
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Dia editado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Semanal
  /programacion/semanal/create:
    post:
      tags:
      - semanal
      summary: Crear programacion semanal
      description: Se requieren privilegios.
      operationId: createSemanal
      parameters:
      - name: fecha
        in: query
        description: fecha de solicitud "DD-MM-YYYY"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sucursal_id
        in: query
        description: id de la sucursal
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonData'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Semanal
  /precio/getbyid/{id}:
    get:
      tags:
      - precios
      summary: Buscar precio por su id.
      description: Se requieren privilegos
      operationId: getPrecioById
      parameters:
      - name: id
        in: path
        description: precio ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPrecio'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Precios
  /precio/update/{id}:
    put:
      tags:
      - precios
      summary: Editar información
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: editPrecios
      parameters:
      - name: id
        in: path
        description: Precio ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Precio editada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/precioBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Precios
  /precio/delete/{id}:
    put:
      tags:
      - precios
      summary: Eliminar precios
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deletePrecios
      parameters:
      - name: id
        in: path
        description: Precio ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Precioor eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Precios
  /precio/getall:
    get:
      tags:
      - precios
      summary: Listar precio
      description: Se requieren privilegos.
      operationId: getPrecios
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPrecios'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Precios
  /precio/create:
    post:
      tags:
      - precios
      summary: Crear precio
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: createPrecios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/precios'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/precioBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Precios
  /producto/getbyid/{id}:
    get:
      tags:
      - productos
      summary: Buscar producto por su id.
      description: Se requieren privilegos
      operationId: getProductoById
      parameters:
      - name: id
        in: path
        description: producto ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Solicitud exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProducto'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Productos
  /producto/update/{id}:
    put:
      tags:
      - productos
      summary: Editar información
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: editProductos
      parameters:
      - name: id
        in: path
        description: Producto ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Producto editada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/modifyTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productoBadRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Productos
  /producto/delete/{id}:
    put:
      tags:
      - productos
      summary: Eliminar productos
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: deleteProductos
      parameters:
      - name: id
        in: path
        description: Producto ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteSchema'
      responses:
        "200":
          description: Productoor eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        "401":
          description: Autenticación fallida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Productos
  /producto/getall:
    get:
      tags:
      - productos
      summary: Listar producto
      description: Se requieren privilegos.
      operationId: getProductos
      responses:
        "200":
          description: Lista generada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProductos'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Productos
  /producto/create:
    post:
      tags:
      - productos
      summary: Crear producto
      description: Se requieren privilegios. 0 para eliminar y 1 para recuperar
      operationId: createProductos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productos'
      responses:
        "200":
          description: Se requieren privilegios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createTrue'
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productoBadRequest'
        "401":
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notAuth'
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalError'
      x-swagger-router-controller: Productos
components:
  schemas:
    emptyTrue:
      type: object
      properties:
        OPERATION:
          type: string
          example: SUCCESS
      example:
        OPERATION: SUCCESS
    getDiasListAll:
      type: array
      items:
        oneOf:
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
        - $ref: '#/components/schemas/jsonData'
    internalError:
      type: object
      properties:
        statusCode:
          type: integer
          example: 500
        error:
          type: string
          example: Internal Server Error
        message:
          type: string
          example: An internal server error occurred
    tokenResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjaGVjayI6dHJ1ZSwiaWF0IjoxNTksMzYwNjE0LCJleHAiOjE1OTIzNjQyMTR9.20VU1mS7WO3j87QsG_K36JHBCSoFsflITLzbJ6XW-XU
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjaGVjayI6dHJ1ZSwiaWF0IjoxNTksMzYwNjE0LCJleHAiOjE1OTIzNjQyMTR9.20VU1mS7WO3j87QsG_K36JHBCSoFsflITLzbJ6XW-XU
    notAuthLogin:
      type: object
      properties:
        statusCode:
          type: integer
          example: 401
        error:
          type: string
          example: Unauthorized
        message:
          type: string
          example: can't authenticate
    notAuth:
      type: object
      properties:
        statusCode:
          type: integer
          example: 401
        error:
          type: string
          example: Unauthorized
        message:
          type: string
          example: Unauthorized
    usuarios:
      required:
      - userName
      - userPassword
      type: object
      properties:
        userName:
          maxLength: 30
          minLength: 3
          type: string
        userPassword:
          maxLength: 32
          minLength: 8
          type: string
    getUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userName:
          type: string
          example: Arath
        createdAt:
          type: string
          example: 2020-06-15T21:33:42.000Z
        updatedAt:
          type: string
          example: 2020-06-15T21:33:42.000Z
      example:
        createdAt: 2020-06-15T21:33:42.000Z
        id: 1
        userName: Arath
        updatedAt: 2020-06-15T21:33:42.000Z
    getUsers:
      type: array
      example:
      - id: 0
        userName: User
        createdAt: 2020-06-16T23:05:14.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        userName: User
        createdAt: 2020-06-16T23:05:14.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 17
        userName: User
        createdAt: 2020-06-16T23:05:14.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 21
        userName: User
        createdAt: 2020-06-16T23:05:14.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getUsers_inner'
    userBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"userPassword" with value "Tklj%" fails to match the required
            pattern: /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,32})/'
    tortas:
      required:
      - masaSabor_id
      - masaTipo_id
      - sabor_id
      type: object
      properties:
        masaTipo_id:
          minimum: 0
          type: integer
        masaSabor_id:
          minimum: 0
          type: integer
        sabor_id:
          minimum: 0
          type: integer
    getTorta:
      properties:
        id:
          type: integer
          example: 5
        masaTipo_id:
          type: integer
          example: 1
        masaSabor_id:
          type: integer
          example: 1
        sabor_id:
          type: integer
          example: 1
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        masaSabor_id: 1
        id: 5
        sabor_id: 1
        masaTipo_id: 1
        updatedAt: 2020-06-16T23:05:14.000Z
    getTortas:
      type: array
      example:
      - id: 5
        masaTipo_id: 2
        masaSabor_id: 2
        sabor_id: 2
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        masaTipo_id: 2
        masaSabor_id: 2
        sabor_id: 2
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        masaTipo_id: 2
        masaSabor_id: 2
        sabor_id: 2
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 10
        masaTipo_id: 2
        masaSabor_id: 2
      items:
        $ref: '#/components/schemas/getTortas_inner'
    tortaBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"masaSabor_id" is required'
    masaTipo:
      required:
      - nombre
      type: object
      properties:
        nombre:
          type: string
    getMasaTipo:
      properties:
        id:
          type: integer
          example: 5
        nombre:
          type: string
          example: bizcocho
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        id: 5
        nombre: bizcocho
        updatedAt: 2020-06-16T23:05:14.000Z
    getMasaTipos:
      type: array
      example:
      - id: 5
        nombre: bizcocho
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        nombre: hoja
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: panqueque
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getMasaTipos_inner'
    masaTipoBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"nombre" is required'
    masaSabor:
      required:
      - nombre
      type: object
      properties:
        nombre:
          type: string
    getMasaSabor:
      properties:
        id:
          type: integer
          example: 5
        nombre:
          type: string
          example: bizcocho
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        id: 5
        nombre: bizcocho
        updatedAt: 2020-06-16T23:05:14.000Z
    getMasaSabors:
      type: array
      example:
      - id: 5
        nombre: nuez
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        nombre: chocolate
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: vainilla
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getMasaTipos_inner'
    masaSaborBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"nombre" is required'
    sabor:
      required:
      - nombre
      type: object
      properties:
        nombre:
          type: string
    getSabor:
      properties:
        id:
          type: integer
          example: 5
        nombre:
          type: string
          example: bizcocho
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        id: 5
        nombre: bizcocho
        updatedAt: 2020-06-16T23:05:14.000Z
    getSabores:
      type: array
      example:
      - id: 5
        nombre: nueces
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        nombre: frambuesa
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: canela
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getMasaTipos_inner'
    saborBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"nombre" is required'
    tamano:
      required:
      - personas
      - tamano
      type: object
      properties:
        tamano:
          type: string
        personas:
          type: string
    getTamano:
      properties:
        id:
          type: integer
          example: 5
        tamano:
          type: string
          example: 1/2
        personas:
          type: string
          example: 6 personas
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        id: 5
        personas: 6 personas
        tamano: 1/2
        updatedAt: 2020-06-16T23:05:14.000Z
    getTamanos:
      type: array
      example:
      - id: 1
        tamano: 1/2
        personas: "6"
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        tamano: "1"
        personas: "12"
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 3
        tamano: "2"
        personas: "18"
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 4
        tamano: "3"
        personas: "24"
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getTamanos_inner'
    tamanoBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"personas" is required'
    sucursales:
      required:
      - colorFondo
      - colorLetra
      - comuna_id
      - contactoEmail
      - contactoNombre
      - direccion
      - giro
      - nombre
      - razonSocial
      - rut
      type: object
      properties:
        rut:
          type: string
        razonSocial:
          type: string
        giro:
          type: string
        direccion:
          type: string
        comuna_id:
          type: integer
        nombre:
          type: string
        contactoEmail:
          type: string
        contactoNombre:
          type: string
        colorFondo:
          type: string
        colorLetra:
          type: string
    getSucursal:
      properties:
        id:
          type: integer
          example: 5
        rut:
          type: string
          example: 1.231.232-2
        razonSocial:
          type: string
          example: Parron Pudahuel LTDA
        giro:
          type: string
          example: servicios
        direccion:
          type: string
          example: Pudahuel xyz 123
        comuna_id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Sucursal Pudahuel
        contactoEmail:
          type: string
          example: pudahuel@elparron.cl
        contactoNombre:
          type: string
          example: Django
        colorFondo:
          type: string
          example: negro
        colorLetra:
          type: string
          example: rosa
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        contactoNombre: Django
        estado: 1
        direccion: Pudahuel xyz 123
        colorLetra: rosa
        nombre: Sucursal Pudahuel
        giro: servicios
        rut: 1.231.232-2
        comuna_id: 1
        contactoEmail: pudahuel@elparron.cl
        colorFondo: negro
        createdAt: 2020-06-16T20:05:48.000Z
        razonSocial: Parron Pudahuel LTDA
        id: 5
        updatedAt: 2020-06-16T23:05:14.000Z
    getSucursales:
      type: array
      example:
      - id: 1
        rut: 2221234-1
        razonSocial: Pudahuel El parroon ltda
        giro: servicios
        direccion: pudahuel xyz 123
        comuna_id: "2"
        nombre: pudahuel el parron
        contactoEmail: pudahuel@elparron.cl
        contactoNombre: Marta
        colorFondo: blanco
        colorLetra: rojo
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        rut: 2221234-1
        razonSocial: Pudahuel El parroon ltda
        giro: servicios
        direccion: pudahuel xyz 123
        comuna_id: "2"
        nombre: pudahuel el parron
        contactoEmail: pudahuel@elparron.cl
        contactoNombre: Marta
        colorFondo: blanco
        colorLetra: rojo
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getSucursales_inner'
    sucursalBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"comuna_id" is required'
    comunas:
      required:
      - ciudad
      - nombre
      type: object
      properties:
        nombre:
          type: string
        ciudad:
          type: string
    getComuna:
      properties:
        id:
          type: integer
          example: 5
        nombre:
          type: string
          example: Pudahuel
        ciudad:
          type: string
          example: Santiago
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        ciudad: Santiago
        id: 5
        nombre: Pudahuel
        updatedAt: 2020-06-16T23:05:14.000Z
    getComunas:
      type: array
      example:
      - id: 1
        nombre: Pudahuel
        ciudad: Santiago
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: Pudahuel
        ciudad: Santiago
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: Providencia
        ciudad: Santiago
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        nombre: Las Condes
        ciudad: Santiago
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getComunas_inner'
    comunaBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"ciudad" is required'
    badRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Bad Request
    modifyTrue:
      type: object
      properties:
        MODIFY DATA:
          type: boolean
          example: true
      example:
        MODIFY DATA: true
    createTrue:
      type: object
      properties:
        CREATED:
          type: boolean
          example: true
      example:
        CREATED: true
    deleteTrue:
      type: object
      properties:
        DELETE DATA:
          type: boolean
          example: true
      example:
        DELETE DATA: true
    getJsonData:
      properties:
        id:
          type: integer
          example: 5
        sucursal_id:
          type: integer
          example: 1
        dia:
          type: integer
          example: 3
        detalle:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
            - $ref: '#/components/schemas/detalleExample'
        createdAt:
          type: string
          example: 2020-07-25 17:14:27
        updatedAt:
          type: string
          example: 2020-07-25 17:14:27
      example:
        sucursal_id: 1
        createdAt: 2020-07-25 17:14:27
        id: 5
        dia: 3
        detalle:
        - ""
        - ""
        updatedAt: 2020-07-25 17:14:27
    jsonBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"dia" is required'
    jsonData:
      required:
      - detalle
      - dia
      - sucursal_id
      type: object
      properties:
        sucursal_id:
          minimum: 0
          type: integer
        dia:
          minimum: 0
          type: integer
        detalle:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
            - $ref: '#/components/schemas/detalle'
        createdAt:
          type: string
        updatedAt:
          type: string
    detalle:
      required:
      - cantidades
      - torta_id
      type: object
      properties:
        torta_id:
          minimum: 0
          type: integer
        cantidades:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/cantidades'
            - $ref: '#/components/schemas/cantidades'
            - $ref: '#/components/schemas/cantidades'
            - $ref: '#/components/schemas/cantidades'
    cantidades:
      required:
      - cantidad
      - tamano_id
      type: object
      properties:
        tamano_id:
          minimum: 0
          type: integer
        cantidad:
          minimum: 0
          type: integer
    detalleExample:
      required:
      - cantidades
      - torta_id
      type: object
      properties:
        torta_id:
          type: integer
          example: 1
        cantidades:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/cantidadesExample'
            - $ref: '#/components/schemas/cantidadesExample'
            - $ref: '#/components/schemas/cantidadesExample'
            - $ref: '#/components/schemas/cantidadesExample'
    cantidadesExample:
      required:
      - cantidad
      - tamano_id
      type: object
      properties:
        tamano_id:
          type: integer
          example: 1
        cantidad:
          type: integer
          example: 20
    deleteSchema:
      required:
      - estado
      type: object
      properties:
        estado:
          type: integer
          example: 0
      description: 0 to delete or 1 to restore
    precios:
      required:
      - costo
      - cuadrada
      - diet
      - masaTipo_id
      - producto_id
      - sucursal_id
      - tamano_id
      - venta
      type: object
      properties:
        producto_id:
          type: integer
        tamano_id:
          type: integer
        masaTipo_id:
          type: integer
        diet:
          type: integer
        cuadrada:
          type: integer
        costo:
          type: integer
        venta:
          type: integer
        sucursal_id:
          type: integer
    getPrecio:
      properties:
        id:
          type: integer
          example: 2
        producto_id:
          type: integer
          example: 1
        tamano_id:
          type: integer
          example: 1
        masaTipo_id:
          type: integer
          example: 2
        diet:
          type: integer
          example: 0
        cuadrada:
          type: integer
          example: 1
        costo:
          type: integer
          example: 10000
        venta:
          type: integer
          example: 5000
        sucursal_id:
          type: integer
          example: 1
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        sucursal_id: 1
        createdAt: 2020-06-16T20:05:48.000Z
        venta: 5000
        estado: 1
        costo: 10000
        cuadrada: 1
        producto_id: 1
        id: 2
        tamano_id: 1
        diet: 0
        masaTipo_id: 2
        updatedAt: 2020-06-16T23:05:14.000Z
    getPrecios:
      type: array
      example:
      - id: 1
        producto_id: 1
        tamano_id: 1
        masaTipo_id: 1
        diet: 1
        cuadrada: 0
        costo: 7000
        venta: 10000
        sucursal_id: 1
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        producto_id: 1
        tamano_id: 1
        masaTipo_id: 1
        diet: 1
        cuadrada: 0
        costo: 7000
        venta: 10000
        sucursal_id: 1
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        producto_id: 1
        tamano_id: 1
        masaTipo_id: 1
        diet: 1
        cuadrada: 0
        costo: 7000
        venta: 10000
        sucursal_id: 1
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getPrecios_inner'
    precioBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"sucursal_id" is required'
    productos:
      required:
      - diet
      - nombre
      - productoTipo_id
      type: object
      properties:
        productoTipo_id:
          type: integer
        nombre:
          type: string
        diet:
          type: integer
    getProducto:
      properties:
        id:
          type: integer
          example: 2
        productoTipo_id:
          type: integer
          example: 1
        nombre:
          type: string
          example: Bizcocho frambuesa nuez
        diet:
          type: integer
          example: 0
        estado:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2020-06-16T20:05:48.000Z
        updatedAt:
          type: string
          example: 2020-06-16T23:05:14.000Z
      example:
        createdAt: 2020-06-16T20:05:48.000Z
        estado: 1
        productoTipo_id: 1
        id: 2
        diet: 0
        nombre: Bizcocho frambuesa nuez
        updatedAt: 2020-06-16T23:05:14.000Z
    getProductos:
      type: array
      example:
      - id: 1
        productoTipo_id: 1
        diet: 1
        cuadrada: Bizcocho vainilla chocolate
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        productoTipo_id: 1
        diet: 1
        cuadrada: Bizcocho vainilla chocolate
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      - id: 2
        productoTipo_id: 1
        diet: 1
        cuadrada: Bizcocho vainilla chocolate
        estado: 1
        createdAt: 2020-06-16T20:05:48.000Z
        updatedAt: 2020-06-16T23:05:14.000Z
      items:
        $ref: '#/components/schemas/getProductos_inner'
    productoBadRequest:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: '"productoTipo_id" is required'
    getUsers_inner:
      type: object
      properties:
        id:
          type: integer
        userName:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    getTortas_inner:
      type: object
      properties:
        masaTipo_id:
          type: string
        masaSabor_id:
          type: string
        sabor_id:
          type: string
        estado:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    getMasaTipos_inner:
      type: object
      properties:
        nombre:
          type: string
        estado:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    getTamanos_inner:
      type: object
      properties:
        tamano:
          type: string
        personas:
          type: string
        estado:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    getSucursales_inner:
      type: object
      properties:
        rut:
          type: string
        razonSocial:
          type: string
        giro:
          type: string
        direccion:
          type: string
        comuna_id:
          type: integer
        nombre:
          type: string
        contactoEmail:
          type: string
        contactoNombre:
          type: string
        colorFondo:
          type: string
        colorLetra:
          type: string
        estado:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
    getComunas_inner:
      type: object
      properties:
        nombre:
          type: string
        ciudad:
          type: string
        estado:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
    getPrecios_inner:
      type: object
      properties:
        producto_id:
          type: integer
        tamano_id:
          type: integer
        masaTipo_id:
          type: integer
        diet:
          type: integer
        cuadrada:
          type: integer
        costo:
          type: integer
        venta:
          type: integer
        sucursal_id:
          type: integer
        estado:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
    getProductos_inner:
      type: object
      properties:
        productoTipo_id:
          type: integer
        nombre:
          type: string
        diet:
          type: integer
        estado:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
